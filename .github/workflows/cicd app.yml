name: Terraform CI/CD core

on:
  push:
    paths:
      - 'application_platform/**'
  workflow_run:
    workflows: ["Validate Infrastructure"]
    types:
      - completed
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./application_platform

jobs:
  pull:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Terraform state pull
        run: terraform state pull
        working-directory: ${{ env.WORKING_DIR }}

  dev_stage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}


  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create staging
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply staging
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}


  prod:
    needs: stage_prod
    runs-on: ubuntu-22.04
    environment: 
      name: production
      url: ${{ steps.get_web_endpoint.outputs.WEB_ENDPOINT }} # replace deploy_prod and web_url with actual output variables
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create prod
        run: terraform workspace select prod || terraform workspace new prod
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply prod
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
