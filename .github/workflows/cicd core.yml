name: Terraform CI/CD core

on:
  workflow_run:
    workflows: ["Terraform CI/CD global"]
    types:
      - completed
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./core_infrastructure

jobs:
  pull:
    runs-on: ubuntu-22.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform state pull
        run: terraform state pull
        working-directory: ${{ env.WORKING_DIR }}

  deploy:
    needs: pull
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Choose Terraform workspace
        run: |
          echo "Triggered by branch: ${{ github.event.workflow_run.head_branch }}"
          
          if [[ "${{ github.event.workflow_run.head_branch }}" == "main" ]]; then
            terraform workspace select prod || terraform workspace new prod
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "staging" ]]; then
            terraform workspace select staging || terraform workspace new staging
          elif [[ "${{ github.event.workflow_run.head_branch }}" == "dev" ]]; then
            terraform workspace select dev || terraform workspace new dev
          fi

      - name: Terraform plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}